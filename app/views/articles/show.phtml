<?php
	/**
	 * Project: MVC2022.
	 * Author:  InCubics
	 * Date:    29/06/2022
	 * Updated: 02/10/2025
	 * File:    show.phtml
	 */
?>
<h2>
	<?= $title ?> SHOW
</h2>
<br>
<a href="<?= url('/articles')?>">articles index</a><br>
<hr>
<?= $string ?><br>
The ID in the url as param0 (p0) is: <b><?= ($id ? $id : 'not provided as url-param') ?></b>
<br><br>
Data by id from given array; <b><i><?= $data ?></i></b>
<hr>
<br>
<div class="red">NB: clean-url's and domain-name usage are required for this framework.</div>
<br><br>
<b>Features in this MVC-framework:</b>
<ul>
	<li>Controller
		<ul>
			<li>Makes instance by typehinted classes in action-param's</li>
			<li>Named-param's in route-url passed from route to action-parma's</li>
			<li>views are custom called in controller-action by folder and filename</li>
		</ul>
	</li>
	<li>Models like Laravel
		<ul>
			<li>Models that get just the fillable fieldnames</li>
			<li>Optional hidden fields that ar taken out from the response</li>
			<li>Models with defining custom tablename (other than modelname + s)</li>
			<li>Chainable methods to build database queries Eloquent-alike, eq:</li>
			<ul>
				<li>all</li><li>find</li><li>andWhere</li><li>all CRUD-methods</li>
				<li>min,max,sum,avg-aggregates</li><li>raw</li>
				<li>oneOnMany, manyOnMany</li>
				<li>optional get all realted data within a nested-key</li>
				<li>optional change output to json-format </li>
			</ul>
			<li>Database connection for full MySqli params-bind, MySQLi basic usage or PDO</li>
			<li>Database connection-info stored in .env-file</li>
		</ul>
	</li>
	<li>
		Views and Layouts
		<ul>
			<li>Views handle all var-types from controller-action</li>
			<li>Layout selection between multiple layouts with key in .env-file file</li>
			<li>Build in responsive layout by <a href="http://www.initializr.com">Initializr</a> HTML5 with Bootsrap</li>
			<li>Swithing between layouts is possible on a custom schedule</li>
			<li>External CSS and JS scripts via CDN are configured as arrays in PHP files located in the config folder</li>
			<li>Showing a message in a show-hide animated bar at the top of the screen</li>
			<li>Pagination with chained query on Models and buttons by paginatorService</li>
		</ul>
	</li>
	<li>
		Some build-in feautures
		<ul>
			<li>Environment variables from .env </li>
			<li>Login-form</li>
			<li>Password renewal for logged-on users</li>
			<li>Password-forgot-form</li>
			<li>Administration example on the `fruit-table`</li>
			<ul>
				<li>Overview of all records, ordered (index)</li>
				<li>Adding a record (add) with input-validation</li>
				<li>Altering records (update)with input-validation</li>
				<li>Deleting a records (delete)</li>
			</ul>
			<li>Deliverd with a basic gallery</li>
		</ul>
	</li>
	<li>Security
		<ul>
			<li>Routes protected on submit-method (get, post, put, patch ad/or delete)</li>
			<li>Routes protected with URL-whitelist</li>
			<li>Middleware protection on routes (optional for eq: authentication and authorization)</li>
			<li>Classes, Traits and Inheritance namespaced by an autoloader on the app-folder</li>
			<li>Unqiue encryption depending on: App-key</li>
			<li>Salt ecryption and decryption</li>
			<li>Session fingerprint-protected with IP-check</li>
			<li>Forms for adding and updating protected with csrf-token</li>
			<li>Form-data validation FormRequests on pipe-line seperated strings multiple checks, like:</li>
			<ul>
				<li>required, nullable, between, same, string, min, max, reg_ex, alphanum, and more.</li>
			</ul>
			<li>Single-point of entry by index-file in public-folder</li>
			<li>Public content in public-folder, eq: css, js and images</li>
		</ul>
	</li>
	<li>Helper-functions
		<ul>
			<li>Request-dataobject and Response-dataobject</li>
			<li>Dump 'n Die -function (dd)</li>
			<li>Url, back and redirect-functions</li>
			<li>Setting and getting var's in session and/or the response-object</li>
			<li>Environment-function to get easily env-variables, eq: env('app')->sitename</li>
		</ul>
	</li>
	<li>Middleware
		<ul>
			<li>Middleware called on routes (optional calling multiple classes)</li>
			<li>Structural calling Middleware before initiaating controllers</li>
			<li>Structural calling Middleware after controller-action finished</li>
		</ul>
	</li>
	<li>Services
		<ul>
			<li>Calling Services before views (eq: nav, meta-tags for seo, css-linktag and js-tags)</li>
		</ul>
	</li>
	<li>Smtp-mailer
		<ul>
			<li>Sending smtp-email</li>
			<li>WEB-server configuration in .env-file</li>
			<li>Email-preview on screen-dump on flag in .env-file</li>
		</ul>
	</li>
	<li>Artibuild
		<ul>
			<li>An (basic) Artisan-alike terminal-command to create all kinds of MVC2025 controllers, models and views </li>
		</ul>
	</li>
</ul>


